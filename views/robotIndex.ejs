<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title> 스마트 물류봇 </title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
</head>
<body>
  <div class="container mt-5">
    <h1>물류 관리 품목</h1>
    <table class="table">
      <thead>

        <tr>
          <th scope="col">품목</th>
          <th scope="col">수량</th>
         
        </tr>
      </thead>
      <tbody>
        <% data.forEach(item => { %>
          <tr>
            <td><%= item.name %></td>
            <td><%= item.quantity %></td>
           
          </tr>
        <% }); %>
      </tbody>
    </table>
  </div>

  <script>
    const socket = new WebSocket('ws://172.24.208.116:8081');
    function fetchData() {
      fetch('/api/getLatestData')
        .then(response => response.json())
        .then(data => {
          const tableBody = document.querySelector('tbody');
          tableBody.innerHTML = '';

          data.forEach(item => {
            const row = document.createElement('tr');
            row.innerHTML = `
              <td>${item.name}</td>
              <td>${item.quantity}</td>
              <button type= "button" id="controlButton-${item.name}" class="btn btn-light" onclick="findAndReduce('${item.name}')"> ${item.name} 가져오기 </button>
            

            `;
            tableBody.appendChild(row);
          });
        })
        .catch(error => {
          console.error('Error fetching data:', error);
        });
    }

    // 초기 데이터 로딩
    fetch('/initialData') // 초기 데이터를 가져옴
      .then(response => response.json())
      .then(initialData => {
        const tableBody = document.querySelector('tbody');
        tableBody.innerHTML = '';

        initialData.forEach(item => {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${item.name}</td>
            <td>${item.quantity}</td>
            <button id="controlButton-${item.name}" type= "button" class="btn btn-light" onclick="findAndReduce('${item.name}')"> ${item.name} 가져오기 </button>
            
          `;
          tableBody.appendChild(row);
        });

        // 주기적으로 데이터 업데이트 (예: 5초마다)
        setInterval(fetchData, 1000);
      })
      .catch(error => {
        console.error('Error fetching initial data:', error);
      });


      async function findAndReduce(itemName) {
        let locationInfo;
        switch (itemName) {
          case 'apple':
            locationInfo = '1층, A';
            break;
          case 'pear':
            locationInfo = '1층, B';
            break;
          case 'banana':
            locationInfo = '2층, A';
            break;
          case 'grape':
            locationInfo = '2층, B';
            break;
          default:
            alert('잘못된 아이템입니다.');
            return;
        }

        try {
          const response = await fetch('/api/findAndReduce', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ itemName, locationInfo }) // 위치 정보도 함께 전송
          });

          if (response.ok) {
            const result = await response.json();
            if (result.success) {
              fetchData(); // 데이터 업데이트
              socket.send(locationInfo); // 위치 정보를 웹소켓을 통해 전송
            } else {
              alert(`품목 ${itemName} 업데이트 완료.`);
            }
          } else {
            alert('데이터베이스 연동 중 오류가 발생했습니다.');
          }
        } catch (error) {
          console.error('오류 발생:', error);
        }
      }



  </script>


  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script>
</body>
</html>
